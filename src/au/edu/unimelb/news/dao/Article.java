/* Generated by DaoGen version 0.1
 *
 * DO NOT EDIT THIS FILE. This file was automatically
 * generated, any changes made to this fill will be
 * lost if the file is re-generated.
 */
package au.edu.unimelb.news.dao;

import java.lang.Comparable;
import java.util.Date;

public class Article implements Comparable<Article> {

	private long id = 0;
	private long newsletterId;
	private String number = "";
	private String name = "";
	private String details = "";
	private String status = "";
	private boolean deleted;
	private boolean published;
	private Date lastUpdate = new Date();
	private long lastUpdatePersonId;

	public long getId() {
		return id;
	}

	public long getNewsletterId() {
		return newsletterId;
	}

	public String getNumber() {
		return number;
	}

	public String getName() {
		return name;
	}

	public String getDetails() {
		return details;
	}

	public String getStatus() {
		return status;
	}

	public boolean isDeleted() {
		return deleted;
	}

	public boolean isPublished() {
		return published;
	}

	public Date getLastUpdate() {
		return lastUpdate;
	}

	public long getLastUpdatePersonId() {
		return lastUpdatePersonId;
	}

	public void setId(long id) {
		this.id = id;
	}

	public void setNewsletterId(long newsletterId) {
		 this.newsletterId = newsletterId;
	}

	public void setNumber(String number) {
		 this.number = number;
	}

	public void setName(String name) {
		 this.name = name;
	}

	public void setDetails(String details) {
		 this.details = details;
	}

	public void setStatus(String status) {
		 this.status = status;
	}

	public void setDeleted(boolean deleted) {
		 this.deleted = deleted;
	}

	public void setPublished(boolean published) {
		 this.published = published;
	}

	public void setLastUpdate(Date lastUpdate) {
		 this.lastUpdate = lastUpdate;
	}

	public void setLastUpdatePersonId(long lastUpdatePersonId) {
		 this.lastUpdatePersonId = lastUpdatePersonId;
	}

	public int compareTo(Article o) {
		if(newsletterId!=o.getNewsletterId()) {
			if(this.newsletterId < o.getNewsletterId()) return -1; else return 1;
		}
		if(number.compareTo(o.getNumber())!=0) {
			return number.compareTo(o.getNumber());
		}
		if(name.compareTo(o.getName())!=0) {
			return name.compareTo(o.getName());
		}
		if(details.compareTo(o.getDetails())!=0) {
			return details.compareTo(o.getDetails());
		}
		if(status.compareTo(o.getStatus())!=0) {
			return status.compareTo(o.getStatus());
		}
		if(deleted!=o.deleted) {
			if(this.deleted) return -1; else return 1;
		}
		if(published!=o.published) {
			if(this.published) return -1; else return 1;
		}
		if(lastUpdate.compareTo(o.getLastUpdate())!=0) {
			return lastUpdate.compareTo(o.getLastUpdate());
		}
		if(lastUpdatePersonId!=o.getLastUpdatePersonId()) {
			if(this.lastUpdatePersonId < o.getLastUpdatePersonId()) return -1; else return 1;
		}
		return 0;
	}

}
